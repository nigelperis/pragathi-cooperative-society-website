@import "tailwindcss";

/* Define CSS variables for light mode - matching navbar blue/yellow theme */
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 220 100% 15%;

    --card: 0 0% 100%;
    --card-foreground: 220 100% 15%;

    --popover: 0 0% 100%;
    --popover-foreground: 220 100% 15%;

    --primary: 220 100% 25%;
    --primary-foreground: 0 0% 100%;

    --secondary: 45 100% 88%;
    --secondary-foreground: 220 100% 15%;

    --muted: 45 50% 94%;
    --muted-foreground: 220 50% 45%;

    --accent: 45 100% 55%;
    --accent-foreground: 220 100% 15%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    --border: 45 30% 88%;
    --input: 45 30% 88%;
    --ring: 220 100% 25%;

    --radius: 0.75rem;

    --gradient-primary: linear-gradient(
      135deg,
      hsl(220 100% 25%),
      hsl(220 100% 35%)
    );
    --gradient-accent: linear-gradient(
      135deg,
      hsl(45 100% 55%),
      hsl(45 100% 65%)
    );
    --gradient-hero: linear-gradient(
      135deg,
      hsl(220 100% 25% / 0.95),
      hsl(220 100% 35% / 0.85)
    );

    --shadow-soft: 0 2px 12px hsl(220 100% 25% / 0.08);
    --shadow-medium: 0 4px 24px hsl(220 100% 25% / 0.12);
    --shadow-large: 0 8px 32px hsl(220 100% 25% / 0.16);

    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

/* Define CSS variables for dark mode - matching navbar blue/yellow theme */
.dark {
  --background: 220 100% 8%;
  --foreground: 45 100% 95%;

  --card: 220 50% 12%;
  --card-foreground: 45 100% 95%;

  --popover: 220 50% 12%;
  --popover-foreground: 45 100% 95%;

  --primary: 220 100% 35%;
  --primary-foreground: 0 0% 100%;

  --secondary: 220 30% 18%;
  --secondary-foreground: 45 100% 95%;

  --muted: 220 30% 18%;
  --muted-foreground: 45 50% 65%;

  --accent: 45 100% 55%;
  --accent-foreground: 220 100% 15%;

  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 45 100% 95%;

  --border: 220 30% 18%;
  --input: 220 30% 18%;
  --ring: 220 100% 35%;
}

/* Map variables to Tailwind utilities via @theme (enables border-border, bg-background, etc.) */
@theme inline {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));
  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));
  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));
  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));
  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));
  --color-border: hsl(var(--border)); /* Enables border-border */
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --border-radius: var(--radius);
  /* Gradients and shadows can be used directly in CSS; add if you want @apply support */
  --background-gradient-primary: var(--gradient-primary);
  --background-gradient-accent: var(--gradient-accent);
  --background-gradient-hero: var(--gradient-hero);
  --box-shadow-soft: var(--shadow-soft);
  --box-shadow-medium: var(--shadow-medium);
  --box-shadow-large: var(--shadow-large);
  --transition: var(--transition-smooth);
}

/* Base layer styles (now @apply works with custom utilities) */
@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;

    overflow-x: hidden;
  }

  html {
    scroll-behavior: smooth;
  }

  nav {
    backface-visibility: hidden;
    transform: translateZ(0);
  }
}
